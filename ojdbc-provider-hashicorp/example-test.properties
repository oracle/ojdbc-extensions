################################################################################
# Copyright (c) 2025 Oracle and/or its affiliates.
#
# The Universal Permissive License (UPL), Version 1.0
#
# Subject to the condition set forth below, permission is hereby granted to any
# person obtaining a copy of this software, associated documentation and/or data
# (collectively the "Software"), free of charge and under any and all copyright
# rights in the Software, and any and all patent rights owned or freely
# licensable by each licensor hereunder covering either (i) the unmodified
# Software as contributed to or provided by such licensor, or (ii) the Larger
# Works (as defined below), to deal in both
#
# (a) the Software, and
# (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
# one is included with the Software (each a "Larger Work" to which the Software
# is contributed by such licensors),
#
# without restriction, including without limitation the rights to copy, create
# derivative works of, display, perform, and distribute the Software and make,
# use, sell, offer for sale, import, export, have made, and have sold the
# Software and the Larger Work(s), and to sublicense the foregoing rights on
# either these or other terms.
#
# This license is subject to the following condition:
# The above copyright notice and either this complete permission notice or at
# a minimum a reference to the UPL must be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
################################################################################

# This file provides examples of properties that configure tests in this
# module.
#
# QUICK GUIDE TO RUNNING TESTS:
#   1. Create a copy of this file named "test.properties":
#      cp example-test.properties test.properties
#   2. In test.properties, replace example values with real values (the file is
#      .gitignore'd, so sensitive info won't be checked in to the repo)
#   3. Comment out any lines for which a value can not be provided (tests are
#      skipped if no value is configured).
#   4. mvn clean verify
#
# CONFIGURING TEST PROPERTIES
#   Test properties are read from a properties file by the TestProperties class.
#   The TestProperties class can be found in:
#   ojdbc-provider-common/src/testFixtures/java/oracle/jdbc/provider/TestProperties.java
#   The default behavior of TestProperties is to read a file named
#   "test.properties" in the current directory. A non-default location may be
#   specified as a JVM system property:
#   mvn clean verify -Doracle.jdbc.provider.TestProperties=/path/to/my-test.properties
#
# MAINTAINING THIS FILE
#   Project maintainers should add an example to this file anytime they write a
#   test which requires a new property. Not doing so will inflict pain and
#   suffering upon our fellow programmers, and will also lead to increased
#   maintenance costs.
#
# IGNORING UNCONFIGURED PROPERTIES
#   No test should cause a build failure due to an unconfigured property.
#   Using JUnit terminology: A test should "abort" rather than "fail" when a
#   property is not configured. This means that the test does not pass, but it
#   does not cause the build to fail either.
#   Methods of the TestProperties class will automatically abort a test if a
#   property is not configured. The org.junit.jupiter.api.Assumptions class may
#   also be used directly to abort a test.
#   There is NO environment in which ALL tests can be run. Some tests may
#   require authentication as a managed identity in an Azure VM, while other
#   tests require authentication as an instance principal in an OCI compute
#   instance; These environments are mutually exclusive. This is one reason why
#   tests can not fail the build if a required property is not set.
#   A more practical reason is that developers may not need to run all tests if
#   their changes are isolated to single module. For instance, a developer
#   working on an OCI provider should not need to set up an Azure tenancy to test
#   their changes.

################################################################################
# HASHICORP DEDICATED VAULT CONFIGURATION
################################################################################

# URL of the Dedicated Vault instance
VAULT_ADDR=https://your-dedicated-vault-instance-url:8200

# Vault token for authentication
VAULT_TOKEN=hvs.CAESINZGyourDedicatedVaultTokenHereRGikKImh2cy5ExampleToken

# Path to the secret in the Dedicated Vault
DEDICATED_VAULT_SECRET_PATH=/v1/admin/secret/data/your-secret-path

# Optional key to extract a specific value from the JSON secret
KEY=your-secret-key

# Username for Userpass authentication
VAULT_USERNAME=your-username

# Password for Userpass authentication
VAUL_TPASSWORD=your-password

# Optional path to the Userpass authentication mount point in Vault (default: userpass)
USERPASS_AUTH_PATH=userpass

# Optional namespace for Vault API requests
VAULT_NAMESPACE=your-namespace

# Role ID for AppRole authentication
ROLE_ID=your-role-id

# Secret ID for AppRole authentication
SECRET_ID=your-secret-id

# Optional path to the AppRole authentication mount point in Vault (default: approle)
APPROLE_AUTH_PATH=approle

# GitHub personal access token for authentication
GITHUB_TOKEN=your-github-personal-access-token

# Optional path for GitHub authentication in Vault (default: github)
GITHUB_AUTH_PATH=github

# The secret path for the username provider in HCP Vault Dedicated.
USERNAME_SECRET_PATH=/v1/namespace/secret/data/username

# The secret path for the password provider in HCP Vault Dedicated.
PASSWORD_SECRET_PATH=/v1/namespace/secret/data/password

# The secret path for the connection string provider in HCP Vault Dedicated.
TNSNAMES_SECRET_PATH=/v1/namespace/secret/data/tnsnames

# The alias in the tnsnames.ora file to use for the connection string.
TNS_ALIAS=your_tns_alias

# The secret path for the TCPS (TLS) wallet in HCP Vault Dedicated.
TLS_WALLET_SECRET_PATH=/v1/namespace/secret/data/tcps-wallet

# The type of the file stored in HCP Vault Dedicated (SSO, PKCS12, PEM).
TLS_FILE_TYPE=PKCS12

# Optional password for the TLS file stored in HCP Vault Dedicated.
TLS_FILE_PASSWORD=******

# The secret path for the SEPS wallet in HCP Vault Dedicated.
SEPS_WALLET_SECRET_PATH=/v1/namespace/secret/data/seps-wallet

# Optional password for the SEPS wallet stored in HCP Vault Dedicated.
SEPS_WALLET_PASSWORD=*****

# Optional index to select specific credentials from the SEPS wallet.
SEPS_CONNECTION_STRING_INDEX=1

################################################################################
# HCP VAULT SECRETS CONFIGURATION
################################################################################

# The name of the application where the secret is stored
HCP_APP_NAME=your-app-name

# Client ID for OAuth2 client_credentials flow
HCP_CLIENT_ID=your-client-id

# Client Secret for OAuth2 client_credentials flow
HCP_CLIENT_SECRET=your-client-secret

# Organization ID in HCP Vault
HCP_ORG_ID=your-organization-id

# Project ID in HCP Vault
HCP_PROJECT_ID=your-project-id

# Name of the secret to be fetched from the application
SECRET_NAME=your-secret-name

# Path to the credentials file containing authentication details
# (By default: ~/.config/hcp/creds-cache.json if using HCP CLI)
HCP_CREDENTIALS_FILE=/path/to/your/creds-cache.json
